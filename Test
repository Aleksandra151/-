package org.example;

import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.testng.Assert;
import org.testng.annotations.*;


import java.time.Duration;

public class labtwo {

    private WebDriver chromeDriver;
    private static final String baseUrl = "https://www.nmu.org.ua/ua/";

    @BeforeClass(alwaysRun = true)
    public void setUp() {
        WebDriverManager.chromedriver().setup();
        ChromeOptions chromeOptions = new ChromeOptions();
        chromeOptions.addArguments("--start-fullscreen");
        chromeOptions.setImplicitWaitTimeout(Duration.ofSeconds(15));
        this.chromeDriver = new ChromeDriver(chromeOptions);
    }

    @BeforeMethod
    public void preconditions() {
        chromeDriver.get(baseUrl);
    }


    @Test
    public void testSlider() {
        // Знаходження елементу за класом
        WebElement nextButton = chromeDriver.findElement(By.className("next"));

        // Знаходження елементу за CSS селектором
        WebElement nextButtonByCss = chromeDriver.findElement(By.cssSelector("a.next"));

        // Перевірка рівності
        Assert.assertEquals(nextButton, nextButtonByCss);

        // Знаходження елементу за класом
        WebElement previousButton = chromeDriver.findElement(By.className("prev"));

        // Цикл для 20 ітерацій
        for (int i = 0; i < 20; i++) {
            // Змініть кількість ітерацій на власний розсуд
            if (nextButton.getAttribute("class").contains("disabled")) {
                previousButton.click();
                // Перевірка, чи клас "disabled" присутній
                Assert.assertTrue(previousButton.getAttribute("class").contains("disabled"));
                Assert.assertFalse(nextButton.getAttribute("class").contains("disabled"));
            } else {
                nextButton.click();
                // Перевірка, чи клас "disabled" присутній
                Assert.assertTrue(nextButton.getAttribute("class").contains("disabled"));
                Assert.assertFalse(previousButton.getAttribute("class").contains("disabled"));
            }
        }
    }





    @Test
    public void testSearchFieldOnForStudentPage() {
        String studentPageUrl = "content/student_life/students/";
        chromeDriver.get(baseUrl + studentPageUrl);

        // Знаходження елементу за тегом input
        WebElement searchField = chromeDriver.findElement(By.tagName("input"));

        // Перевірка, чи елемент існує
        Assert.assertNotNull(searchField);

        // Різні параметри searchField
        System.out.println(String.format("Name attribute: %s", searchField.getAttribute("name")) +
                String.format("\nID attribute: %s", searchField.getAttribute("id")) +
                String.format("\nType attribute: %s", searchField.getAttribute("type")) +
                String.format("\nValue attribute: %s", searchField.getAttribute("value")) +
                String.format("\nPosition: (%d;%d)", searchField.getLocation().x, searchField.getLocation().y) +
                String.format("\nSize: %dx%d", searchField.getSize().height, searchField.getSize().width));

        // Введення значення
        String inputValue = "I need info";
        searchField.sendKeys(inputValue);

        // Перевірка тексту
        Assert.assertEquals(searchField.getAttribute("value"), inputValue);

        // Натискання клавіші Enter
        searchField.sendKeys(Keys.ENTER);

        // Перевірка, чи сторінка змінилася
        Assert.assertNotEquals(chromeDriver.getCurrentUrl(), baseUrl + studentPageUrl);
    }

    @Test
    public void testClickOnForTeachers() {
        // Шлях до елементу
        String xpathExpression = "/html/body/center/div[4]/div/table/tbody/tr/td[2]/div/div[6]/a[2]/img";
